#Sliding Window Algorithm

#What
[1, 1, 1, 2, 3] => to find contiguous subarray with sum 3

#brute :>
            1   1   1   2   3
1st itr     |-------|
                3               => this looks like subarray with sum 3

            1   1   1   2   3
2nd itr         |-------|
                    4

            1   1   1   2   3
3rd itr :           |-------|
                        6

In this approach, we are doing repetitive work of adding same numbers always.

1st itr :> 1 + 1 + 1
2nd itr :> 1 + 1 + 2
3rd itr :> 1 + 2 + 3

we can optimise this repetitive work by sliding window algorithm ? How
=> At each iteration, include next item and exclude previous one.

#How to Identify
    -> subarray / substring
    -> contiguous

#Types
    -> Fixed Size (window size given)
    -> Variable Size (window size not given)